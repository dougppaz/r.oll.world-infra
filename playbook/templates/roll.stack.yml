services:
  app:
    image: {{ docker_app_image_name }}:{{ docker_app_image_tag }}
    depends_on:
      - db
      - mds1-ftp
      - channel-layer-redis
    volumes:
    - {{ config_dir }}/newrelic.ini:/home/app/newrelic.ini:ro
    - {{ certs_dir }}/oidc.key:/home/app/oidc.key:ro
    networks:
    - default
    - lb
    environment:
      # DEBUG: 1
      # SITE_ID: 1
      SECRET_KEY: '{{ secret_key }}'
      DATABASES_DEFAULT: postgres://roll:roll@db/roll
      SUBDOMAIN_BASE: {{ roll_subdomain_base }}
      CORS_ALLOWED_ORIGIN_REGEXES: "^https://\\w+\\.{{ roll_subdomain_base }}$$,^https://{{ roll_subdomain_base }}$$"
      STATIC_URL: https://statics.{{ roll_subdomain_base }}/
      MEDIA_URL: https://mds1.{{ roll_subdomain_base }}/
      CSP_CONNECT_SRC: "'self',{{ roll_subdomain_base }},*.{{ roll_subdomain_base }}"
      CSP_STYLE_SRC: "'self','unsafe-inline','unsafe-hashes',statics.{{ roll_subdomain_base }},fonts.googleapis.com"
      CSP_FONT_SRC: "'self',statics.{{ roll_subdomain_base }},fonts.gstatic.com"
      CSP_SCRIPT_SRC: "'self','unsafe-eval',statics.{{ roll_subdomain_base }}"
      CSP_IMG_SRC: "'self',data:,statics.{{ roll_subdomain_base }},mds1.{{ roll_subdomain_base }}"
      STORAGES_DEFAULT_BACKEND: storages.backends.ftp.FTPStorage
      STORAGES_POSTS_BACKEND: storages.backends.ftp.FTPStorage
      THUMBNAIL_DEFAULT_STORAGE: storages.backends.ftp.FTPStorage
      FTP_STORAGE_LOCATION: ftp://roll:roll@mds1-ftp:21
      MEDIA_PATH_AS_NGINX_ACCEL: 1
      CHANNEL_LAYERS_DEFAULT_BACKEND: channels_redis.core.RedisChannelLayer
      CHANNEL_LAYERS_DEFAULT_CONFIG: >
        {
          "hosts": [
            ["channel-layer-redis", 6379]
          ]
        }
      PHONE_AUTH_SMS_GATEWAY: twilio
      PHONE_AUTH_SMS_GATEWAY_ARGS: {{ twilio_args }}
      OVERRIDE_SCHEME: https
      OIDC_RSA_PRIVATE_KEY: /home/app/oidc.key
      ENABLE_SSO: 1
      SOCIAL_AUTH_ROLL_KEY: '{{ social_auth_roll_key }}'
      SOCIAL_AUTH_ROLL_SECRET: '{{ social_auth_roll_secret }}'
      ROLL_OAUTH2_APPLICATION_ID: '3'
    deploy:
      replicas: 2
  db:
    image: postgres:latest
    volumes:
    - db-data:/var/lib/postgresql/data
    - {{ scripts_dir }}/db/replication_pg_hba.sh:/docker-entrypoint-initdb.d/00_replication_pg_hba.sh:ro
    environment:
      POSTGRES_USER: roll
      POSTGRES_PASSWORD: roll
      POSTGRES_DB: roll
    command:
    - --wal_level=replica
    networks:
    - default
    - db
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.labels.db_mode == primary
  db-standby:
    image: postgres:latest
    volumes:
    - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: roll
      POSTGRES_PASSWORD: roll
      POSTGRES_DB: roll
      POSTGRES_PRIMARY_HOST: db
    command:
    - --primary_conninfo=postgres://roll:roll@db/roll
    - --wal_level=replica
    networks:
    - db
    deploy:
      mode: global
      placement:
        constraints:
        - node.labels.db_mode == standby
  statics:
    image: {{ docker_statics_image_name }}:{{ docker_statics_image_tag }}
    networks:
    - default
    - lb
    deploy:
      mode: global
  mds1-ftp:
    image: garethflowers/ftp-server:latest
    environment:
      - FTP_PASS=roll
      - FTP_USER=roll
    volumes:
      - mds1-data:/home/roll/
    deploy:
      placement:
        constraints:
        - node.labels.roll_storage == mds1
  mds1:
    image: nginx:latest
    volumes:
      - mds1-data:/usr/share/nginx/html/:ro
      - {{ config_dir }}/nginx.medias.default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
    - default
    - lb
    deploy:
      replicas: 2
      placement:
        constraints:
        - node.labels.roll_storage == mds1
  channel-layer-redis:
    image: redis:alpine

volumes:
  db-data: {}
  mds1-data: {}

networks:
  lb:
    name: lb
    external: true
  db:
    name: roll_db
    external: true
