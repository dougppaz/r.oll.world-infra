defaults
	mode 			http
	timeout 	client 		10s
	timeout 	connect 	5s
	timeout 	server 		10s

backend app
	option 	forwardfor
	server 	app 	app:8000

backend ws
	server		app		app:8000
	timeout 	tunnel 	4h

backend statics
	server 	statics 	statics:80

backend mds1
	server 	mds1 	mds1:80

backend prometheus
	server 	prometheus 	prometheus:9090

backend grafana
	server 	grafana 	grafana:3000

frontend roll
	bind 							[::]:80 v4v6
	bind 							[::]:443 v4v6 ssl crt /usr/local/etc/haproxy/certs/ssl.pem
	http-request 			redirect scheme https unless { ssl_fc }
	http-request 			set-header X-Forwarded-Proto https
	http-request 			add-header X-Real-Ip %[src]
	option 						forwardfor
	http-response 		set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;"
	acl 							ACL_statics hdr(host) -i statics.{{ roll_subdomain_base }}
	use_backend 			statics if ACL_statics
	acl 							ACL_mds1 hdr(host) -i mds1.{{ roll_subdomain_base }}
	use_backend 			mds1 if ACL_mds1
	acl 							ACL_prometheus hdr(host) -i prometheus.monitoring.{{ roll_subdomain_base }}
	use_backend 			prometheus if ACL_prometheus
	acl 							ACL_grafana hdr(host) -i grafana.monitoring.{{ roll_subdomain_base }}
	use_backend 			grafana if ACL_grafana
	use_backend 			ws if { path_beg /ws }
	default_backend 	app

frontend prometheus
	bind 					:9090
	mode 					http
	http-request 	use-service prometheus-exporter if { path /metrics }
	no log
